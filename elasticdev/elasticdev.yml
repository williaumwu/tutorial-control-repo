global_arguments:
   EnvVars:
      TEST_VARIABLE: HELLO
   region: us-east-1
   db_type: mysql
   sg_db_label: database
   sg_web_label: web
infrastructure:
   apigateway:
       stack_name: elasticdev:::api_gateway
       arguments:
           name: api_gateway
   vpc:
       stack_name: elasticdev:::aws_vpc_2tier
       arguments:
           vpc_peer: null
   dockerhost:
       stack_name: elasticdev:::docker::ec2_docker_host
       dependencies: 
           - infrastructure::vpc
       arguments:
          size: t2.micro
          disksize: 25
       stack_vars:
           - name: elasticdev:::ubuntu::ec2_ubuntu
             arguments:
                  ip_key: public_ip
#infrastructure:
#   dockerhost:
#       stack_name: elasticdev:::ec2_docker_host
#       arguments:
#          hostname: docker_flask_sample
#          size: t2.micro
#          disksize: 25
#       stack_vars:
#           - name: elasticdev:::ubuntu::ec2_ubuntu
#             arguments:
#                  ip_key: public_ip
#build:
#   ci_example:
#       dependencies: 
#           - infrastructure::dockerhost
#       stack_name: elasticdev:::ec2_ci
#       arguments:
#           docker_host: docker_flask_sample
#           repo_url: https://github.com/williaumwu/flask_sample
#           repo_branch: master
#           docker_repo: flask_sample
#           triggered_branches:
#             - master
#infrastructure:
#       apigateway:
#           stack_name: elasticdev:::api_gateway
#           arguments:
#               name: test3
#       vpc:
#           stack_name: elasticdev:::aws_vpc_2tier
#           arguments:
#               vpc_peer: null
#   dockerhost:
#       stack_name: elasticdev:::docker::ec2_docker_host
#       dependencies: 
#           - infrastructure::vpc
#       arguments:
#          size: t2.micro
#          disksize: 25
#       stack_vars:
#           - name: elasticdev:::ubuntu::ec2_ubuntu
#             arguments:
#                  ip_key: public_ip
#   db:
#       stack_name: aws_db_rds
#       arguments:
#          flavor: "db.t2.micro"
#          size: 5
#          engine: "MySQL"
#          az: False
#build:
#   web:
#       stack_name: gary:::public::Stacks/CI/General/Dev/DirectPull/Test/main
#       repo_url: https://github.com/williaumwu/demo-web
#       repo_branch: master
#       triggered_branches:
#                 - master
#       stack_vars:
#           gary:::public::Core/Docker/JiffyHost/Guest/register:
#                                                 arguments:
#                                                     ip_key: private_ip
#                                                 EnvVars:
#                                                     NAME_VAR: jimmy
#       arguments:
#          DOCKER_FILE_BUILD: configs/build/Dockerfile
#          DOCKER_FILE_TEST: configs/build/test/Dockerfile
#          DOCKER_TEST_SCRIPTS: 
#                              - test_1.sh
#          DOCKER_PROVIDER: docker.io
#          DOCKER_USERNAME: williaumwu
#          DOCKER_REPO_TYPE: public
#          DOCKER_REPO_NAME: flask-sample
#       results:
#           - name: deploy_1
#       rename:
#           EnvVars:
#             DockerImage: DOCKER_IMAGE_FLASK
#   triggers:
#       - name: flask_sample_master
#         type: trigger
#         path: deploy::flask_master
#         channels:
#             - deploy_1
#deploy:
#    flask_master:
#       stack_name: deploy_dev
#       stack_vars:
#           gary:::public::Core/Docker/JiffyHost/Guest/register:
#                                                 arguments:
#                                                     ip_key: private_ip
#                                                 EnvVars:
#                                                     NAME_VAR: jimmy
#       arguments:
#           EnvVars:
#               MYSQL_DB_NAME: flask
#               MYSQL_DB_USER: sample
#               MYSQL_DB_PASSWORD: admin123
#           PRE_SCRIPTS:
#              - install_mysql.sh
#              - createdb.sh
#              - create_schema.sh
#           DOCKER_TEMPLATE_FILES:
#              - template_dir: configs/deploy
