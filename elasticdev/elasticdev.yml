global_arguments:
   EnvVars:
      TEST_VARIABLE: TEST_VALUE
   region: us-east-1
   db_type: mysql
   sg_db_label: database
   sg_web_label: web
   gitops: True
infrastructure:
   vpc:
       stack_name: aws_vpc_2tier
   dockerhost:
       stack_name: aws_ec2_dockerhost_dev
       arguments:
          size: t2.micro
          disksize: 50
   db:
       stack_name: aws_db_rds
       arguments:
          flavor: "db.t2.micro"
          size: 5
          engine: "MySQL"
          az: False
build:
   flask_sample_1:
       stack_name: build_dev
       repo_url: https://github.com/<username>/flask-sample
       repo_branch: dev1
       triggered_branches:
                 - dev1
       arguments:
          DOCKER_FILE_BUILD: configs/build/Dockerfile
          DOCKER_PROVIDER: docker.io
          DOCKER_USERNAME: <docker_username>
          DOCKER_REPO_TYPE: public
          DOCKER_REPO_NAME: flask-sample
       results:
           - name: deploy_1
       rename:
           EnvVars:
             DockerImage: DOCKER_IMAGE_FLASK
   triggers:
       - name: flask_sample_dev1
         type: trigger
         path: deploy::flask_dev1
         channels:
             - deploy_1
deploy:
    flask_dev1:
       stack_name: deploy_dev
       arguments:
           EnvVars:
               MYSQL_DB_NAME: flask
               MYSQL_DB_USER: sample
               MYSQL_DB_PASSWORD: admin123
           PRE_SCRIPTS:
              - install_mysql.sh
              - createdb.sh
              - create_schema.sh
           DOCKER_TEMPLATE_FILES:
              - template_dir: configs/deploy
